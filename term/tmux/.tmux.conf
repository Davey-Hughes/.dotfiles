# use the default shell
set-option -g default-shell $SHELL

# use C-a, since it's on the home row and easier to hit than C-b
set-option -g prefix C-a
unbind-key C-a
bind-key C-a send-prefix
set -g base-index 1

# easy config reload
bind-key R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

# vi is good
setw -g mode-keys vi

# give focus events to programs like vim
set -g focus-events on

set-option -g default-terminal tmux-256color

# use truecolor
set-option -sa terminal-features ',xterm-kitty:RGB'

# don't allow automatic window renaming
set-option -g allow-rename off

bind-key : command-prompt
bind-key r refresh-client
bind-key L clear-history

# longer scrollback buffer
set-option -g history-limit 3000

bind-key space next-window
bind-key bspace previous-window
bind-key enter next-layout

# use vim-like keys for splits and windows
bind-key v split-window -h
bind-key s split-window -v
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

bind-key S choose-tree

# move window left and right with Ctrl-Arrow Key
bind-key C-Left swap-window -t -1\; select-window -t -1
bind-key C-Right swap-window -t +1\; select-window -t +1

# smart pane switching with awareness of vim splits
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

bind-key C-o rotate-window

bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical
set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80

bind-key a last-pane
bind-key q display-panes
bind-key c new-window
bind-key t next-window
bind-key T previous-window

bind-key [ copy-mode
bind-key ] paste-buffer

# setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

set-window-option -g display-panes-time 1500

# set window notifications
setw -g monitor-activity off
set -g visual-activity off

# enable native Mac OS X copy/paste (might not be necessary)
# set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"

# allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

# set escape time to 0
set -sg escape-time 0

# open panes in current path
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# allow mouse
set -g mouse on

source "$TMUXCONFIG"

# tmux Plugin Manager
set -g @plugin 'tmux-plugins/tpm'

# tmux resurrect
set -g @plugin 'tmux-plugins/tmux-resurrect'
# restore pane contents
# set -g @resurrect-capture-pane-contents 'on'

# restore vim sessions
set -g @resurrect-strategy-vim 'session'

# tokyo night theme
set -g @plugin 'fabioluciano/tmux-tokyo-night'
set -g @theme_plugins 'datetime'
set -g @theme_plugin_datetime_format '%H%M'
set -g @theme_enable_icons 0
set -g @theme_plugin_datetime_icon ' '

# continuously save tmux environment
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'

run -b '~/.tmux/plugins/tpm/tpm'
